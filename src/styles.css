* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    line-height: 1.5;
    height: 100vh;
    -webkit-font-smoothing: antialiased;
    font-family: 'EB Garamond', serif;
}

input, textarea, select {
    font: inherit;
}

hr {
    margin-bottom: 1rem;
}

.main-content {
    display: grid;
    grid-template-columns: 300px 1fr;
}

.sidebar {
    padding: 1.5rem;
    height: 100vh;
}

.content {
    padding: 1.5rem;
    height: 100vh;
}

li {
    list-style-type: none;
}

.content-header,
.projects-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Form lines formatting */
.form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 0.5rem;
}

.form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

/* Add project form */
#add-project-container {
    padding: 12px;
    border-radius: 8px;
    background-color: lightgrey;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.project-form-action {
    display: flex;
    justify-content: space-evenly;
    margin-top: 1rem;

    button {
        background-color: white;
        padding: 8px 12px;
        border: none;
        border-radius: 4px;
    }
}

.add-project-header {
    margin-bottom: 8px;
    text-decoration: underline;
}

/* Projects list */
.projects-header {
    margin-bottom: 1rem;
}

.project-list-item {
    display: flex;
    justify-content: space-between;
    padding: 8px 12px;
    font-size: 1.2rem;
    font-weight: 500;
    color: white;
    background-color: gray;
    border-radius: 8px;
    margin-bottom: 8px;

    &:hover {
        background-color: darkgray;
        color: black;

        button {
            background-color: darkgray;
        }
    }

    button {
        border: 0;
        background-color: gray;
        color: white;

        &:hover {
            color: red;
        }
    }
}

.projects-list {
    margin-bottom: 1.5rem;
}

/* Class for currently active project list item */
.active {
    background-color: darkgray;
    color: black;

    button {
        background-color: darkgray;
    }
}

/* Add todo form */
#add-todo-container {
    margin-top: 1rem;
    padding: 24px;
    max-width: 800px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    background-color: lightgrey;

    #todo-title {
        max-width: 200px;
    }

}

.todo-form-title {
    font-size: 1.4rem;
    text-decoration: underline;
    margin-bottom: 12px;
}

.todo-form-action {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;

    button {
        background-color: white;
        width: 72px;
        padding: 8px 12px;
        border: none;
        border-radius: 6px;
        margin-top: 1rem;
    }
}

/* Todos list */
.todo-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.todo-item {
    background-color: whitesmoke;
    border-radius: 12px;
    box-shadow:
    0 1px 2px rgba(0, 0, 0, 0.07),
    0 2px 4px rgba(0, 0, 0, 0.07);
}

/* todo item checkbox section */
.todo-checkbox {
    
    /* Hidden checkbox */
    & > input[type="checkbox"]{
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
        pointer-events: none;
    }

    /* Custom circle checkbox */
    label span {
        display: inline-block;
        width: 22px;
        height: 22px;
        border-radius: 50%;
        border: 2px solid black;
        background-color: white;
        flex-shrink: 0;
        transition: background-color 0.2s ease, border-color 0.2s ease;
        position: relative;
    }

    label {
        cursor: pointer;
        user-select: none;
    }
}

/* Checks custom checkbox when invisible checkbox is clicked */
.todo-checkbox input[type="checkbox"]:checked + label span {
    background-color: black;
}

/* Checkmark in the custom checkbox */
.todo-checkbox label span::after {
    content: '';
    display: block;
    width: 4px;
    height: 8px;
    border: solid white;
    border-width: 0 2px 2px 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -60%) rotate(45deg);
    opacity: 0;
    transition: opacity 0.2s ease;
}

/* Shows checkmark when checkbox is checked */
.todo-checkbox input[type="checkbox"]:checked + label span::after {
    opacity: 1;
}


/* Empty todo list state */
.empty-todo-list {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: whitesmoke;
    color: gray;
    padding: 2rem 0;
    margin-top: 12px;
    border-radius: 12px;
    box-shadow:
    0 1px 2px rgba(0, 0, 0, 0.07),
    0 2px 4px rgba(0, 0, 0, 0.07);
}


/* Add details form */
.todo-details {
    position: fixed;
    top: 0;
    right: 0;
    background-color: lightgrey;
    height: 100%;
}

.details-content {
    padding: 36px;
    width: 450px;
}

.checklist-section {
    margin-top: 24px;
}

.checklist-header {
    margin-bottom: 12px;
}

.add-checklist-item {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
    margin-top: 0.25rem;

    input[type="text"] {
        padding: 0.3rem;
        flex: 1;
    }
}

.checklist-form-action {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;

    button {
        background-color: white;
        width: fit-content;
        padding: 8px 12px;
        border: none;
        border-radius: 6px;
        margin-top: 1rem;
    }
}

.details-header {
    display: flex;
    justify-content: space-between;
}

/* Show form buttons */
.add-button {
    border: 0;
    border-radius: 50%;
    height: 24px;
    width: 24px;
    font-size: 1.2rem;

    &:hover {
        background-color: lightgray;
    }
}

/* Form buttons formatting */
.cancel-btn:hover,
.submit-btn:hover {
    background-color: darkgray;
}

.close-button {
    border: 0;
    background: 0;
    cursor: pointer;
    font-size: 1.5rem;
    
    &:hover {
        color: red;
    }
}

/* Hidden class */
.hidden {
    display: none !important;
}

/* Form input formatting */
input[type="date"],
textarea, select {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid;
    font-size: 1rem;
    border-radius: 4px;
}

input[type="date"],
select {
    height: 2.5rem;
}

input[type="text"] {
    border: 1px solid;
    padding: 0.1rem;
    border-radius: 4px;
}

textarea {
    min-height: 100px;
}